trigger:
- main


pool: Ubuntu




stages:
- stage: Build
  displayName: 'Build stage'
  jobs:
  - job: Build
    displayName: 'Build'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '20.9.x'
      displayName: 'Install Node.js'

    - script: |
        cd $(System.DefaultWorkingDirectory)/react-g2
        npm install
        npm test
        npm run build
      displayName: 'npm install, build, and test'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/react-g2/build'
        includeRootFolder: false
        archiveType: zip
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true

    - publish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy stage'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: 'Deploy'
    environment: $(environmentName)
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
            - task: AzureRmWebAppDeployment@4
              displayName: 'Azure React Front deploy: REACT'
              inputs:
                ConnectionType: 'AzureRM'
                azureSubscription: $(azureSubscription)
                appType: 'webAppLinux'
                WebAppName: $(AppName)
                packageForLinux: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
                RuntimeStack: 'NODE|20.9.x'
                StartupCommand: 'npm run dev'
